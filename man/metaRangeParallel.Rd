% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_Parallel.r
\name{metaRangeParallel}
\alias{metaRangeParallel}
\title{metaRangeParallel object}
\value{
A \verb{<metaRangeParallel>} object.
}
\description{
Create infrastructure that can spin up and run multiple
metaRangeSimulations in parallel, each parameterized using a row of a sample
data frame.
}
\keyword{internal}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{error_messages}}{A vector of error messages encountered when
setting simulation traits.}

\item{\code{generative_names}}{\verb{<list>} List of names of outputs from
generators.}

\item{\code{generators}}{A list of generators (\code{\link{Generator}} or
inherited class) objects for generating simulation model values.}

\item{\code{parallel_threads}}{\verb{<integer>} number of parallel threads to run
simulations.}

\item{\code{register_parallel}}{\verb{<logical>} Should the metaRangeParallel object register parallel cores? If FALSE, the user must register parallel cores outside of this R6 object on their own. For the default value, TRUE, \code{metaRangeParallel} does it for you.}

\item{\code{results_dir}}{\verb{<character>} directory where results will be saved.}

\item{\code{sample_data}}{A data frame of sampled parameters for each simulation.}

\item{\code{seed}}{\verb{<integer>} seed for the random number generator.}

\item{\code{simulation_template}}{A \code{\link{metaRangeSimulation}} object
with processes and traits common to all simulations.}

\item{\code{species_name}}{\verb{<character>} name of species being modeled}

\item{\code{warning_messages}}{A vector of warning messages encountered when
setting model attributes.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-metaRangeParallel-new}{\code{metaRangeParallel$new()}}
\item \href{#method-metaRangeParallel-get_message_sample}{\code{metaRangeParallel$get_message_sample()}}
\item \href{#method-metaRangeParallel-log_simulation}{\code{metaRangeParallel$log_simulation()}}
\item \href{#method-metaRangeParallel-set_model_sample}{\code{metaRangeParallel$set_model_sample()}}
\item \href{#method-metaRangeParallel-run}{\code{metaRangeParallel$run()}}
\item \href{#method-metaRangeParallel-clone}{\code{metaRangeParallel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-new"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-new}{}}}
\subsection{Method \code{new()}}{
Create a new \link{metaRangeParallel} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$new(simulation_template, sample_data, results_dir, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulation_template}}{A metaRangeSimulation object already loaded
with species and processes common to all simulations.}

\item{\code{sample_data}}{A data.frame where each column represents a trait
and each row is a different value for that trait. The number of rows
determines the number of simulations.}

\item{\code{results_dir}}{Results directory path where the simulation results
and simulation log will be stored.}

\item{\code{...}}{Parameters listed individually.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-get_message_sample"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-get_message_sample}{}}}
\subsection{Method \code{get_message_sample()}}{
Substitutes the specified sample details into a status message (using sprintf) and returns the result.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$get_message_sample(status_message, sample_index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{status_message}}{Character string message with a placeholder for sample details.}

\item{\code{sample_index}}{Row index of sample data frame containing details of substitution parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Status message with substituted sample details.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-log_simulation"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-log_simulation}{}}}
\subsection{Method \code{log_simulation()}}{
Summarizes the simulation log and writes it to a text file.

This method takes a nested list of simulation log entries generated by the \code{run} method and summarizes the log. It determines which simulations were successful, collects any warnings, and writes the summary to a text file in the results directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$log_simulation(simulation_log)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulation_log}}{A nested list of simulation log entries.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the summary, indices of failed simulations, indices of simulations with warnings, and the full log.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-set_model_sample"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-set_model_sample}{}}}
\subsection{Method \code{set_model_sample()}}{
Sets the model sample attributes via the sample data frame and the
generators.

This method sets the sample attributes of a SimulationModel object based
on the specified sample index.
It uses the sample data frame and the generators to determine the
attribute values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$set_model_sample(simulation, sample_index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulation}}{\code{\link{metaRangeSimulation}} object (clone) to
receive sample traits.}

\item{\code{sample_index}}{Index of sample from data frame.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-run"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-run}{}}}
\subsection{Method \code{run()}}{
Runs the multiple population simulations, stores the results, and
creates a simulation log.

This method runs multiple population simulations using the
specified simulation template and sample data. It passes a results
directory to processes within the simulation template that save results,
and creates a simulation log. The simulation log contains information
about the success or failure of each simulation run.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$run()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the simulation log. Each element of the list
corresponds to a simulation run and contains information about the
success or failure of the run, any error messages, and the path to the
saved results file (if applicable).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-metaRangeParallel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-metaRangeParallel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{metaRangeParallel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
